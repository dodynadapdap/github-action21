name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/team2-literature-frontend:${{ github.sha }} .
        docker images

    - name: Run tests
      run: docker run ${{ secrets.DOCKER_USERNAME }}/team2-literature-frontend:${{ github.sha }} npm test

    - name: Push to DockerHub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/team2-literature-frontend:${{ github.sha }}

  deploy_staging:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to staging
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USER }}
        key: ${{ secrets.STAGING_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/team2-literature-frontend:${{ github.sha }}
          docker stop app-staging || true
          docker run -d --name app-staging ${{ secrets.DOCKER_USERNAME }}/team2-literature-frontend:${{ github.sha }}

  deploy_production:
    needs: deploy_staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/team2-literature-frontend:${{ github.sha }}
          docker stop app-production || true
          docker run -d --name app-production ${{ secrets.DOCKER_USERNAME }}/team2-literature-frontend:${{ github.sha }}

  notify:
    needs: [deploy_staging, deploy_production]
    runs-on: ubuntu-latest
    steps:
    - name: Send Discord notification
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        args: 'Deployment completed successfully!'
